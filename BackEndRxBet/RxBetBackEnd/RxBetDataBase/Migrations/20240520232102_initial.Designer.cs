// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RxBetDataBase;

#nullable disable

namespace RxBetDataBase.Migrations
{
    [DbContext(typeof(RxBetDbContext))]
    [Migration("20240520232102_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RxBetDataBase.Models.BetEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Payout")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UserEntityId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Win")
                        .HasColumnType("numeric");

                    b.HasKey("GameId");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("RxBetDataBase.Models.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<bool>("DailyBonusCollected")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastVisit")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LoyaltyLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalLoss")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalWinnings")
                        .HasColumnType("numeric");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RxBetDataBase.Models.BetEntity", b =>
                {
                    b.HasOne("RxBetDataBase.Models.UserEntity", null)
                        .WithMany("BettingHistory")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("RxBetDataBase.Models.UserEntity", b =>
                {
                    b.Navigation("BettingHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
